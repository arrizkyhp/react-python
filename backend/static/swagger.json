{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Contact API with Authentication"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "Contact",
      "description": "Operations related to contacts (Authentication Required)"
    },
    {
      "name": "Authentication",
      "description": "User registration, login, logout, and status"
    },
    {
      "name": "User",
      "description": "Operations related to users (Authentication Required)"
    }
  ],
  "securityDefinitions": {
    "cookieAuth": {
      "type": "apiKey",
      "name": "session",
      "in": "cookie",
      "description": "Session cookie obtained after successful login. Handled automatically by the browser."
    }
  },
  "paths": {
    "/app/contacts": {
      "get": {
        "summary": "Get a list of contacts.",
        "tags": ["Contact"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination.",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page.",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A list of contacts and pagination information.",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Contact" }
                },
                "pagination": { "$ref": "#/definitions/Pagination" }
              }
            }
          },
          "401": { "$ref": "#/responses/UnauthorizedError" },
          "403": { "$ref": "#/responses/ForbiddenError" }
        }
      },
      "post": {
        "summary": "Create a new contact.",
        "tags": ["Contact"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ContactInput" }
          }
        ],
        "responses": {
          "201": {
            "description": "Contact Created!",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "contact": { "$ref": "#/definitions/Contact" }
              }
            }
          },
          "400": { "$ref": "#/responses/BadRequestError" },
          "401": { "$ref": "#/responses/UnauthorizedError" },
          "403": { "$ref": "#/responses/ForbiddenError" },
          "409": { "$ref": "#/responses/ConflictError" }
        }
      }
    },
    "/app/contacts/{contact_id}": {
      "patch": {
        "summary": "Update an existing contact.",
        "tags": ["Contact"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the contact to update."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ContactUpdateInput" }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact Updated.",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "contact": { "$ref": "#/definitions/Contact" }
              }
            }
          },
          "400": { "$ref": "#/responses/BadRequestError" },
          "401": { "$ref": "#/responses/UnauthorizedError" },
          "403": { "$ref": "#/responses/ForbiddenError" },
          "404": { "$ref": "#/responses/NotFoundError" },
          "409": { "$ref": "#/responses/ConflictError" }
        }
      },
      "delete": {
        "summary": "Delete a contact.",
        "tags": ["Contact"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "The ID of the contact to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted!",
            "schema": { "$ref": "#/definitions/SuccessMessage" }
          },
          "401": { "$ref": "#/responses/UnauthorizedError" },
          "403": { "$ref": "#/responses/ForbiddenError" },
          "404": { "$ref": "#/responses/NotFoundError" }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user.",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserRegistrationInput" }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "user": { "$ref": "#/definitions/User" }
              }
            }
          },
          "400": { "$ref": "#/responses/BadRequestError" },
          "409": { "$ref": "#/responses/ConflictError" }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in an existing user.",
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserLoginInput" }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful.",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "user": { "$ref": "#/definitions/User" }
              }
            }
          },
          "400": { "$ref": "#/responses/BadRequestError" },
          "401": {
            "description": "Invalid credentials.",
            "schema": { "$ref": "#/definitions/ErrorMessage" }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Log out the current user.",
        "tags": ["Authentication"],
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "Logout successful.",
            "schema": { "$ref": "#/definitions/SuccessMessage" }
          },
          "401": { "$ref": "#/responses/UnauthorizedError" }
        }
      }
    },
    "/auth/status": {
      "get": {
        "summary": "Check the current user's login status.",
        "tags": ["Authentication"],
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "User status.",
            "schema": {
              "type": "object",
              "properties": {
                "logged_in": { "type": "boolean" },
                "user": { "$ref": "#/definitions/User" }
              }
            }
          },
          "401": {
            "description": "User is not logged in (this might not be hit if security middleware redirects first, but good to document)",
            "schema": {
              "type": "object",
              "properties": {
                "logged_in": { "type": "boolean", "example": false }
              }
            }
          }
        }
      }
    },
    "/app/users": {
      "get": {
        "summary": "Get a list of users.",
        "tags": ["User"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number for pagination.",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "integer",
            "description": "Number of items per page.",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users and pagination information.",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/User" }
                },
                "pagination": { "$ref": "#/definitions/Pagination" }
              }
            }
          },
          "401": { "$ref": "#/responses/UnauthorizedError" }
        }
      }
    }
  },
  "definitions": {
    "Contact": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "firstName": { "type": "string" },
        "lastName": { "type": "string" },
        "email": { "type": "string", "format": "email" }
      }
    },
    "ContactInput": {
      "type": "object",
      "required": ["firstName", "lastName", "email"],
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The first name of the contact."
        },
        "lastName": {
          "type": "string",
          "description": "The last name of the contact."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email address of the contact."
        }
      }
    },
    "ContactUpdateInput": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "The updated first name of the contact."
        },
        "lastName": {
          "type": "string",
          "description": "The updated last name of the contact."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The updated email address of the contact."
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "total_items": { "type": "integer" },
        "total_pages": { "type": "integer" },
        "current_page": { "type": "integer" },
        "per_page": { "type": "integer" },
        "has_next": { "type": "boolean" },
        "has_prev": { "type": "boolean" },
        "next_num": { "type": "integer", "nullable": true },
        "prev_num": { "type": "integer", "nullable": true }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "username": { "type": "string" },
        "email": { "type": "string", "format": "email" }
      }
    },
    "UserRegistrationInput": {
      "type": "object",
      "required": ["username", "email", "password"],
      "properties": {
        "username": { "type": "string" },
        "email": { "type": "string", "format": "email" },
        "password": { "type": "string", "format": "password" }
      }
    },
    "UserLoginInput": {
      "type": "object",
      "required": ["identifier", "password"],
      "properties": {
        "identifier": { "type": "string", "description": "Username or email" },
        "password": { "type": "string", "format": "password" },
        "remember": { "type": "boolean", "default": false }
      }
    },
    "SuccessMessage": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid. User is not logged in.",
      "schema": { "$ref": "#/definitions/ErrorMessage" }
    },
    "ForbiddenError": {
      "description": "The user does not have the necessary permissions for a resource.",
      "schema": { "$ref": "#/definitions/ErrorMessage" }
    },
    "NotFoundError": {
      "description": "The requested resource was not found.",
      "schema": { "$ref": "#/definitions/ErrorMessage" }
    },
    "BadRequestError": {
      "description": "Invalid input provided.",
      "schema": { "$ref": "#/definitions/ErrorMessage" }
    },
    "ConflictError": {
      "description": "Resource already exists (e.g., username or email).",
      "schema": { "$ref": "#/definitions/ErrorMessage" }
    }
  }
}